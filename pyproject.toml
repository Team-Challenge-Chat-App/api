[tool.poetry]
name = "tc-chat"
version = "0.1.0"
description = ""
authors = ["Maksym Ivannikov <ivannikovmax04@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python="^3.11"
python-slugify = "^8.0.4"
pillow = "^10.3.0"
argon2-cffi = "^23.1.0"
whitenoise = "^6.6.0"
redis = "^5.0.3"
hiredis = "^2.3.2"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
django = "^5.0.4"
django-environ = "^0.11.2"
django-model-utils = "^4.5.0"
django-allauth = {extras = ["mfa"], version = "^0.61.1"}
django-crispy-forms = "^2.1"
crispy-bootstrap5 = "^2024.2"
django-redis = "^5.4.0"
djangorestframework = "^3.15.1"
django-cors-headers = "^4.3.1"
drf-spectacular = "^0.27.2"
gunicorn = "^21.2.0"
django-storages = {extras = ["s3"], version = "^1.14.2"}
django-anymail = "^10.3"
werkzeug = {extras = ["watchdog"], version = "^3.0.2"}
ipdb = "^0.13.13"
watchfiles = "^0.21.0"
mypy = "^1.9.0"
django-stubs = "^4.2.7"
djangorestframework-stubs = "^3.14.5"
sphinx = "^7.2.6"
sphinx-autobuild = "^2024.2.4"
ruff = "^0.4.10"
coverage = "^7.4.4"
djlint = "^1.34.1"
factory-boy = "^3.3.0"
django-debug-toolbar = "^4.3.0"
django-extensions = "^3.2.3"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.8.0"
channels = {extras = ["daphne"], version = "^4.1.0"}
psycopg2 = "^2.9.9"
daphne = "^4.1.1"
djangorestframework-simplejwt = "^5.3.1"
tzdata = "^2024.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
commitizen = "^3.5.4"
pytest = "^8.1.1"
pytest-sugar = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["tc_chat/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
python_version = "^3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*"
]
# Same as Django: https://github.com/cookiecutter/cookiecutter-django/issues/4792.
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    'ISC',
    "ICN",
    "G",
    'INP',
    'PIE',
    "T20",
    'PYI',
    'PT',
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    # "ARG", # Unused function argument
    "PTH",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY",
    # "AIR",
    "PERF",
    # "FURB",
    # "LOG",
    "RUF"
]
ignore = [
    "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "SIM102", # sometimes it's better to nest
    "COM812",
    "ISC001",
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version = "0.2.0a42"
version_scheme = "pep440"
version_provider = "poetry"
major_version_zero = true
